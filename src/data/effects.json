[
  {
    "description": "Gagne 10M$",
    "onPlayed": "await state.addMoney(10)",
    "type": "action",
    "cost": 2
  },
  {
    "description": "Gagne 20M$",
    "onPlayed": "await state.addMoney(20)",
    "type": "action",
    "cost": 4
  },
  {
    "description": "Le matin, gagne 10M$. L'après-midi, gagne 2 énergies",
    "onPlayed": "if (new Date().getHours() < 12) { await state.addMoney(10) } else { await state.addEnergy(2) }",
    "type": "action",
    "cost": 0
  },
  {
    "description": "Gagne 10M$ fois le nombre de cartes @action en main",
    "onPlayed": "await state.addMoney(10 * (state.hand.filter(card => card.effect.type === 'action').length - 1))",
    "type": "action",
    "cost": 4
  },
  {
    "description": "Si le dark mode est activé, gagne 20M$",
    "onPlayed": "await state.addMoney(20)",
    "condition": "localStorage.getItem(\"theme\") === \"dark\"",
    "type": "action",
    "cost": 3
  },
  {
    "description": "Pioche une carte",
    "onPlayed": "await state.draw()",
    "condition": "state.deck.length >= 1",
    "type": "support",
    "cost": 1
  },
  {
    "description": "Pioche 2 cartes",
    "onPlayed": "await state.draw(2)",
    "condition": "state.deck.length >= 2",
    "type": "support",
    "cost": 2
  },
  {
    "description": "Si tu as moins de 4 cartes en main, pioche 2 cartes",
    "onPlayed": "await state.draw(2)",
    "condition": "state.hand.length < 4 && state.deck.length >= 2",
    "type": "support",
    "cost": 1
  },
  {
    "description": "Pioche une carte @action",
    "onPlayed": "await state.draw(1, { type: 'action' })",
    "condition": "state.deck.some(card => card.effect.type === 'action')",
    "type": "support",
    "cost": 2
  },
  {
    "description": "Si tu n'as pas de carte @action en main, pioche une carte @action",
    "onPlayed": "await state.draw(1, { type: 'action' })",
    "condition": "state.hand.every(card => card.effect.type !== 'action') && state.deck.some(card => card.effect.type === 'action')",
    "type": "support",
    "cost": 1
  },
  {
    "description": "Défausse une carte aléatoire, pioche une carte et gagne 10M$",
    "onPlayed": "await state.drop(); await state.draw(); await state.addMoney(10)",
    "condition": "state.hand.length >= 2",
    "type": "support",
    "cost": 0
  },
  {
    "description": "Renvoie une carte aléatoire dans la pioche, pioche une carte",
    "onPlayed": "await state.drop({ toDeck: true }); await state.draw()",
    "condition": "state.hand.length >= 2",
    "type": "support",
    "cost": 0
  },
  {
    "description": "Défausse toutes les cartes en main, pioche 5 cartes",
    "onPlayed": "await state.dropAll(); await state.draw(5)",
    "type": "support",
    "cost": 0
  },
  {
    "description": "Renvoie toutes les cartes en main dans la pioche, pioche 5 cartes",
    "onPlayed": "await state.dropAll({ toDeck: true }); await state.draw(5)",
    "type": "support",
    "cost": 3
  },
  {
    "description": "Double l'énergie",
    "onPlayed": "await state.addEnergy(state.energy)",
    "type": "action",
    "cost": "10"
  }
]
