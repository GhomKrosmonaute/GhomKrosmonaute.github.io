import{r as reactExports,j as jsxRuntimeExports,a as React}from"./react-spline-Gm59yu5V.js";import{b as bank}from"./sound-CMTXQK7H.js";import{a as create,b as useHover,c as cn,B as BorderLight,S as Slot,d as useNavigate,u as useGlobalState,e as useMediaQuery}from"./index-C4YUtnR_.js";const projects=[{name:"Bot.ts",image:"bot.ts.png",description:"TypeScript framework for building Discord bots",detail:"Includes a CLI for generating new bots and bot files, actually my biggest project",url:"https://ghom.gitbook.io/bot.ts"},{name:"CRISPR-Crunch",image:"crispr-crunch.png",description:"Puzzle game about gene editing",detail:"Made in TypeScript with PixiJS and Booyah with the PlayCurious team",url:"https://playcurious.games/our-games/crispr-crunch"},{name:"Portfolio",image:"portfolio.png",description:"My personal portfolio with a card game",detail:"Made in TypeScript with React, Vite, Tailwind CSS, Zustand and a lot of passion"},{name:"Les Labs JS",image:"js-labs.png",description:"A Discord server for JavaScript developers I own and manage",detail:"The best place to learn and share about the JavaScript ecosystem",url:"https://discord.gg/3vC2XWK"},{name:"2D Shooter",image:"shooter.png",description:"My first game in TypeScript",detail:'A simple 2D shooter game with a spaceship and enemies made with p5.js (click "Play offline" for test)',url:"https://github.com/GhomKrosmonaute/TypedShooterGame"},{name:"Gario",image:"gario.png",description:"A 2D platformer game for showcase",detail:"A simple 2D platformer game with a character, a level, a life system and a checkpoint system made with p5.js in TypeScript",url:"https://github.com/GhomKrosmonaute/Gario"},{name:"Booyah",image:"booyah.png",description:"A TypeScript game engine",detail:"A powerful game engine using state machines made in TypeScript by Jesse Himmelstein and forked and improved by me",url:"https://github.com/GhomKrosmonaute/Booyah"},{name:"Nano",image:"nano.png",description:"TypeScript library for building modular Discord bots",detail:"You can use this lib for building Discord bots with a modular and flexible architecture",url:"https://github.com/NanoWorkspace"},{name:"Sea Rescue",image:"sea-rescue.png",description:"3D game about ocean cleaning",detail:"Made with TypeScript, Three.js and Booyah with the PlayCurious team",url:"https://playcurious.games/our-games/sea-rescue/"},{name:"Site Photographe",image:"photo.png",description:"A website for a photographer",detail:"Made with Next.js, TypeScript, React and Tailwind CSS. Optimized for search engines and performance, including a CMS"}],technos=[{name:"TypeScript",logo:"ts.png"},{name:"React",logo:"react.webp"},{name:"Tailwind CSS",logo:"tailwind.png"},{name:"NodeJS",logo:"node.png"},{name:"Vercel",logo:"vercel.png"},{name:"Next.js",logo:"nextjs.webp"},{name:"PostgreSQL",logo:"pgsql.png"},{name:"Docker",logo:"docker.webp"},{name:"PixiJS",logo:"pixi.png"},{name:"Three.js",logo:"three.png"},{name:"Gulp",logo:"gulp.webp"},{name:"Knex",logo:"knex.png"},{name:"Git",logo:"git.png"}],effects=[{description:"Ajoute 1 à la street-cred de Ghom",onPlayed:"await state.addStreetCred(1)",type:"action",cost:2},{description:"Ajoute 2 à la street-cred de Ghom",onPlayed:"await state.addStreetCred(2)",type:"action",cost:4},{description:"Si la street-cred de Ghom est inférieure à 5, ajoute 2 à la street-cred de Ghom",onPlayed:"await state.addStreetCred(2)",condition:"state.streetCred < 5",type:"action",cost:3},{description:"Le matin, ajoute 1 à la street-cred de Ghom. L'après-midi, ajoute 2 à l'énergie",onPlayed:"if (new Date().getHours() < 12) { await state.addStreetCred(1) } else { await state.addEnergy(2) }",type:"action",cost:0},{description:'Ajoute autant de street-cred à Ghom que de cartes "projet" en main',onPlayed:"await state.addStreetCred(state.hand.filter(card => card.effect.type === 'action').length - 1)",condition:"state.hand.filter(card => card.effect.type === 'action').length > 1",type:"action",cost:4},{description:"Si le dark mode est activé, ajoute 2 à la street-cred de Ghom",onPlayed:"await state.addStreetCred(2)",condition:'localStorage.getItem("theme") === "dark"',type:"action",cost:3},{description:"Pioche une carte",onPlayed:"await state.draw()",condition:"state.deck.length >= 1",type:"support",cost:1},{description:"Pioche 2 cartes",onPlayed:"await state.draw(2)",condition:"state.deck.length >= 2",type:"support",cost:2},{description:"Si tu as moins de 4 cartes en main, pioche 2 cartes",onPlayed:"await state.draw(2)",condition:"state.hand.length < 4 && state.deck.length >= 2",type:"support",cost:1},{description:'Pioche une carte "projet"',onPlayed:"await state.draw(1, 'action')",condition:"state.deck.some(card => card.effect.type === 'action')",type:"support",cost:2},{description:`Si tu n'as pas de carte "projet" en main, pioche une carte "projet"`,onPlayed:"await state.draw(1, 'action')",condition:"state.hand.every(card => card.effect.type !== 'action') && state.deck.some(card => card.effect.type === 'action')",type:"support",cost:1},{description:"Défausse une carte aléatoire, pioche une carte",onPlayed:"await state.drop(); await state.draw()",condition:"state.hand.length >= 2",type:"support",cost:0},{description:"Défausse toutes les cartes en main, pioche 5 cartes",onPlayed:"await state.dropAll(); await state.draw(5)",type:"support",cost:3},{description:"Si tu as plus de 7 cartes en main, ajoute 1 d'énergie et 1 à la street-cred de Ghom",onPlayed:"await state.addEnergy(1); await state.addStreetCred(1)",condition:"state.hand.length > 7",type:"support",cost:0}];async function wait(){return new Promise(e=>setTimeout(e,500))}function map(e,t,r,n,a,o=!1){const s=(e-t)/(r-t)*(a-n)+n;return o?n<a?Math.max(Math.min(s,a),n):Math.max(Math.min(s,n),a):s}function isProjectCardInfo(e){return e.image!==void 0}const supports=effects.filter(e=>e.type==="support"),actions=effects.filter(e=>e.type==="action"),technoWithEffect=technos.map((e,t)=>{const r=map(t,0,technos.length,0,supports.length,!0);return{...e,state:"idle",effect:supports[Math.floor(r)]}}),projectsWithEffect=projects.map((e,t)=>{const r=map(t,0,projects.length,0,actions.length,!0);return{...e,state:"idle",effect:actions[Math.floor(r)]}}),deck=[...technoWithEffect,...projectsWithEffect].sort(()=>Math.random()-.5),useCardGame=create((set,getState)=>({deck:deck.slice(7),hand:deck.slice(0,7),energy:20,streetCred:0,addEnergy:e=>{bank.gain.play(),set(t=>({energy:t.energy+e}))},addStreetCred:e=>{set(t=>({streetCred:t.streetCred+e}))},draw:async(e=1,t)=>{bank.draw.play(),set(r=>{const n=r.hand.slice(),a=r.deck.slice().filter(s=>t?s.effect.type===t:!0),o=[];for(let s=0;s<e&&a.length!==0;s++){const i=a.pop();i.state="drawn",o.push(i.name),n.push(i)}return{hand:n,deck:r.deck.filter(s=>!o.includes(s.name))}}),await wait(),set(r=>({hand:r.hand.map(n=>({...n,state:"idle"}))}))},drop:async()=>{bank.drop.play();const e=getState(),t=e.hand.slice().filter(a=>a.state==="idle"),r=Math.floor(Math.random()*t.length),n=t[r];set({hand:e.hand.map(a=>a.name===n.name?{...a,state:"dropped"}:a)}),await wait(),set(a=>({deck:[{...n,state:null},...a.deck],hand:a.hand.filter(o=>o.name!==n.name)}))},dropAll:async()=>{bank.drop.play();const e=getState();set({hand:e.hand.map(t=>t.state==="idle"?{...t,state:"dropped"}:t)}),await wait(),set(t=>({deck:[...t.hand.map(r=>({...r,state:null})),...t.deck],hand:[]}))},play:async card=>{let state=getState();const cantPlay=async()=>{bank.unauthorized.play(),set({hand:state.hand.map(e=>e.name===card.name?{...e,state:"unauthorized"}:e)}),await wait(),set({hand:state.hand.map(e=>e.name===card.name?{...e,state:"idle"}:e)})};if(card.effect.condition&&!eval(card.effect.condition)){await cantPlay();return}if(state.energy<card.effect.cost){await cantPlay();return}bank.play.play(),set({energy:state.energy-card.effect.cost});const thread1=async()=>{set({hand:state.hand.map(e=>e.name===card.name?{...e,state:"played"}:e)}),await wait(),set(e=>({deck:[{...card,state:null},...e.deck],hand:e.hand.filter(t=>t.name!==card.name)}))},thread2=async()=>{/^await state.draw(.*?)$/.test(card.effect.onPlayed)&&await wait(),await eval(`(async () => { ${card.effect.onPlayed} })()`)};await Promise.all([thread1(),thread2()]),state=getState(),state.hand.length===0&&state.draw()}})),constantStyle={transformStyle:"preserve-3d"},Tilt=({max:e=20,reverse:t=!1,scale:r=1,perspective:n=1e3,className:a="",children:o,style:s})=>{const i=reactExports.useRef(null),c=useHover(i),[m,x]=reactExports.useState({}),p=reactExports.useCallback(d=>{if(i.current){const u=i.current.getBoundingClientRect(),g=d.clientX-u.left,f=d.clientY-u.top,h=u.width/2,y=u.height/2,v=(f-y)/y*e,j=(g-h)/h*e;x({...constantStyle,transform:`
            perspective(${n}px)
            rotateX(${t?v:-v}deg)
            rotateY(${t?-j:j}deg)
            scale(${r})
          `})}},[e,n,t,r]),l=reactExports.useCallback(()=>{x({...constantStyle,transition:"transform 0.5s ease-in-out",transform:"scale(1)"})},[]);return reactExports.useEffect(()=>{const d=i.current;return c?d&&(d.addEventListener("mousemove",p),d.addEventListener("mouseleave",l)):l(),()=>{d&&(d.removeEventListener("mousemove",p),d.removeEventListener("mouseleave",l)),l()}},[e,t,r,n,c]),jsxRuntimeExports.jsx("div",{ref:i,className:cn("will-change-transform",a),style:{...m,...s},children:o})},ValueIcon=e=>jsxRuntimeExports.jsxs("div",{className:cn("scale-75",e.className),style:e.style,children:[jsxRuntimeExports.jsx("img",{src:e.image,alt:`${e.name} background image`,title:e.name,className:"pointer-events-auto",style:{scale:e.iconScale}}),jsxRuntimeExports.jsx("div",{className:cn("absolute top-1/2 left-1/2 font-bold text-3xl text-white pointer-events-none",e.textColor),style:{transform:"translateZ(5px) translate(-50%, -45%)"},children:e.value})]}),GameCard=e=>{const t=useCardGame(o=>o.hand.length),r=useCardGame(o=>o.hand.some(s=>s.state!=="idle")),n=useCardGame(o=>o.play),a=e.position-(t-1)/2;return jsxRuntimeExports.jsx("div",{className:cn("game-card","relative w-[calc(630px/3)] h-[calc(880px/3)]","transition-transform hover:-translate-y-14","-mx-3.5 z-10 hover:z-20 cursor-pointer select-none",e.card.state),onClick:()=>{r||n(e.card)},onContextMenu:o=>{o.preventDefault(),isProjectCardInfo(e.card)&&e.card.url&&window.open(e.card.url,"_blank")},style:{marginBottom:`${20-Math.abs(a)*5}px`,rotate:`${a*2}deg`,transitionDuration:"0.3s",transitionTimingFunction:"ease-in-out"},children:jsxRuntimeExports.jsxs(Tilt,{scale:1.1,className:cn("group/game-card transition-shadow duration-200 ease-in-out","shadow-primary hover:shadow-glow-20","flex flex-col w-full h-full rounded-md","rounded-md *:shrink-0",{"bg-card":e.card.effect.type==="support"}),children:[isProjectCardInfo(e.card)&&e.card.detail&&jsxRuntimeExports.jsx("div",{className:cn("absolute pointer-events-none left-1/2 -top-[10px] -translate-x-1/2 -translate-y-full rounded-2xl bg-card","px-5 py-2 opacity-0 group-hover/game-card:animate-appear text-sm w-max max-w-full text-center shadow shadow-primary"),children:e.card.detail}),jsxRuntimeExports.jsxs("div",{className:cn("flex justify-start items-center h-10 rounded-t-md",{"bg-primary":e.card.effect.type==="action","bg-secondary/50":e.card.effect.type==="support"}),style:{transformStyle:"preserve-3d"},children:[jsxRuntimeExports.jsx("div",{className:"font-changa shrink-0 relative",style:{transform:"translateZ(5px) translateX(-15px)",transformStyle:"preserve-3d"},children:jsxRuntimeExports.jsx(ValueIcon,{name:"Energie / Points d'action",image:"images/energy-background.png",value:e.card.effect.cost,style:{transform:"translateZ(5px)",transformStyle:"preserve-3d"}})}),jsxRuntimeExports.jsx("h2",{className:cn("whitespace-nowrap overflow-hidden text-ellipsis shrink-0 flex-grow",{"text-sm":e.card.name.length>20,"text-primary-foreground":e.card.effect.type==="action"}),style:{transform:"translateZ(5px)"},children:e.card.name})]}),isProjectCardInfo(e.card)?jsxRuntimeExports.jsx(GameCardProject,{card:e.card}):jsxRuntimeExports.jsx(GameCardTechno,{card:e.card}),jsxRuntimeExports.jsx("div",{className:"bg-card flex-grow rounded-b-md",style:{transformStyle:"preserve-3d"},children:jsxRuntimeExports.jsx("p",{className:"py-[10px] px-[15px] text-center",style:{transform:"translateZ(10px)"},children:e.card.effect.description})}),jsxRuntimeExports.jsx(BorderLight,{groupName:"game-card",appearOnHover:!0,disappearOnCorners:!0}),jsxRuntimeExports.jsx(BorderLight,{groupName:"game-card",appearOnHover:!0,disappearOnCorners:!0,opposed:!0})]})})},GameCardProject=e=>jsxRuntimeExports.jsxs("div",{className:"group/image",style:{transformStyle:"preserve-3d"},children:[jsxRuntimeExports.jsx("div",{className:cn("inset-shadow","relative flex justify-center items-center"),style:{transformStyle:"preserve-3d"},children:jsxRuntimeExports.jsx("img",{src:`images/projects/${e.card.image}`,alt:`Illustration du projet "${e.card.name}"`,className:"w-full aspect-video object-cover",style:{transform:"translateZ(-15px)"}})}),jsxRuntimeExports.jsx("div",{className:cn("transition-opacity duration-1000 group-hover/image:opacity-0","absolute bottom-0 w-full h-1/3 bg-background/50","flex justify-center items-center"),style:{transform:"translateZ(-5px)"},children:jsxRuntimeExports.jsxs("p",{className:"text-sm text-center",children:['"',e.card.description,'"']})})]}),spinners=["React","Knex"],GameCardTechno=e=>jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment,{children:jsxRuntimeExports.jsx("div",{className:"flex justify-center items-center mt-4",style:{transform:"translateZ(20px)"},children:jsxRuntimeExports.jsx("img",{src:`images/techno/${e.card.logo}`,alt:`Logo de la techno "${e.card.name}"`,className:cn("w-2/3 object-contain aspect-square",{"group-hover/game-card:animate-spin-forward":spinners.includes(e.card.name)})})})});function createContextScope(e,t=[]){let r=[];function n(o,s){const i=reactExports.createContext(s),c=r.length;r=[...r,s];function m(p){const{scope:l,children:d,...u}=p,g=(l==null?void 0:l[e][c])||i,f=reactExports.useMemo(()=>u,Object.values(u));return jsxRuntimeExports.jsx(g.Provider,{value:f,children:d})}function x(p,l){const d=(l==null?void 0:l[e][c])||i,u=reactExports.useContext(d);if(u)return u;if(s!==void 0)return s;throw new Error(`\`${p}\` must be used within \`${o}\``)}return m.displayName=o+"Provider",[m,x]}const a=()=>{const o=r.map(s=>reactExports.createContext(s));return function(i){const c=(i==null?void 0:i[e])||o;return reactExports.useMemo(()=>({[`__scope${e}`]:{...i,[e]:c}}),[i,c])}};return a.scopeName=e,[n,composeContextScopes(a,...t)]}function composeContextScopes(...e){const t=e[0];if(e.length===1)return t;const r=()=>{const n=e.map(a=>({useScope:a(),scopeName:a.scopeName}));return function(o){const s=n.reduce((i,{useScope:c,scopeName:m})=>{const p=c(o)[`__scope${m}`];return{...i,...p}},{});return reactExports.useMemo(()=>({[`__scope${t.scopeName}`]:s}),[s])}};return r.scopeName=t.scopeName,r}var NODES=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],Primitive=NODES.reduce((e,t)=>{const r=reactExports.forwardRef((n,a)=>{const{asChild:o,...s}=n,i=o?Slot:t;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),jsxRuntimeExports.jsx(i,{...s,ref:a})});return r.displayName=`Primitive.${t}`,{...e,[t]:r}},{}),PROGRESS_NAME="Progress",DEFAULT_MAX=100,[createProgressContext,createProgressScope]=createContextScope(PROGRESS_NAME),[ProgressProvider,useProgressContext]=createProgressContext(PROGRESS_NAME),Progress$1=reactExports.forwardRef((e,t)=>{const{__scopeProgress:r,value:n=null,max:a,getValueLabel:o=defaultGetValueLabel,...s}=e;(a||a===0)&&!isValidMaxNumber(a)&&console.error(getInvalidMaxError(`${a}`,"Progress"));const i=isValidMaxNumber(a)?a:DEFAULT_MAX;n!==null&&!isValidValueNumber(n,i)&&console.error(getInvalidValueError(`${n}`,"Progress"));const c=isValidValueNumber(n,i)?n:null,m=isNumber(c)?o(c,i):void 0;return jsxRuntimeExports.jsx(ProgressProvider,{scope:r,value:c,max:i,children:jsxRuntimeExports.jsx(Primitive.div,{"aria-valuemax":i,"aria-valuemin":0,"aria-valuenow":isNumber(c)?c:void 0,"aria-valuetext":m,role:"progressbar","data-state":getProgressState(c,i),"data-value":c??void 0,"data-max":i,...s,ref:t})})});Progress$1.displayName=PROGRESS_NAME;var INDICATOR_NAME="ProgressIndicator",ProgressIndicator=reactExports.forwardRef((e,t)=>{const{__scopeProgress:r,...n}=e,a=useProgressContext(INDICATOR_NAME,r);return jsxRuntimeExports.jsx(Primitive.div,{"data-state":getProgressState(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...n,ref:t})});ProgressIndicator.displayName=INDICATOR_NAME;function defaultGetValueLabel(e,t){return`${Math.round(e/t*100)}%`}function getProgressState(e,t){return e==null?"indeterminate":e===t?"complete":"loading"}function isNumber(e){return typeof e=="number"}function isValidMaxNumber(e){return isNumber(e)&&!isNaN(e)&&e>0}function isValidValueNumber(e,t){return isNumber(e)&&!isNaN(e)&&e<=t&&e>=0}function getInvalidMaxError(e,t){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${t}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${DEFAULT_MAX}\`.`}function getInvalidValueError(e,t){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${t}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${DEFAULT_MAX} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var Root=Progress$1,Indicator=ProgressIndicator;const Progress=reactExports.forwardRef(({barColor:e,className:t,value:r,...n},a)=>jsxRuntimeExports.jsx(Root,{ref:a,className:cn("relative h-4 w-full overflow-hidden rounded-full bg-secondary",t),...n,children:jsxRuntimeExports.jsx(Indicator,{className:cn("h-full w-full flex-1 transition-all",e,{"bg-primary":!e}),style:{transform:`translateX(-${100-(r||0)}%)`}})}));Progress.displayName=Root.displayName;const Gauge=e=>jsxRuntimeExports.jsxs("div",{className:"flex items-center h-12",children:[jsxRuntimeExports.jsx(ValueIcon,{name:e.name,image:e.image,value:e.value,iconScale:e.iconScale,textColor:e.textColor,className:"absolute -translate-x-1/2 z-50"}),jsxRuntimeExports.jsx(Progress,{barColor:e.barColor,className:e.className,value:e.value/e.max*100})]}),HUD=()=>{const e=useCardGame(r=>r.energy),t=useCardGame(r=>r.streetCred);return jsxRuntimeExports.jsxs("div",{className:"w-full max-w-md ml-10 mt-4",children:[jsxRuntimeExports.jsx(Gauge,{name:"Energie / Points d'action",image:"images/energy-background.png",value:e,max:20}),jsxRuntimeExports.jsx(Gauge,{name:"Street cred de Ghom",image:"images/street-cred.png",value:t,max:10,iconScale:"0.3",textColor:"text-transparent",barColor:"bg-red-500"})]})},Game=e=>{const t=useCardGame(),r=useNavigate(),n=useGlobalState(o=>o.setCardGameVisibility),a=useMediaQuery("(width >= 768px) and (height >= 768px)");return n(!!e.show),React.useEffect(()=>{a||r("/")},[a,r]),jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsx("div",{className:cn("absolute w-full transition-[left] ease-in-out duration-500 pointer-events-none",e.show?"left-0":"-left-full"),children:jsxRuntimeExports.jsx(HUD,{})}),jsxRuntimeExports.jsx("div",{className:cn("absolute flex items-center -translate-x-1/2","left-[50vw] transition-[bottom] ease-in-out duration-1000",e.show?"bottom-[-50px]":"-bottom-full"),children:t.hand.map((o,s)=>jsxRuntimeExports.jsx(GameCard,{card:o,position:s},s))})]})};export{Game};
