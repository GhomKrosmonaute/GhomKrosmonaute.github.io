import{aT as u,aU as R,aV as A,S as h,al as g,aW as v,n as I,P as a,o as S,L as T,ai as b,M as B,aX as x,H as E,d as G}from"./index-CqcpNNk7.js";import{c as C,u as M}from"./cards-BBPIiNNw.js";const F={"upgrade cost threshold":()=>({index:u.AddOrSubtract,condition:e=>e.effect.tags.includes("upgrade"),use:(e,t)=>e.effect.tags.includes("upgrade")?{...e,effect:{...e.effect,cost:R(t,e)}}:e}),"lowers price of hand cards":(e,t)=>({index:u.AddOrSubtract,condition:n=>e.includes(n.name),use:n=>({...n,effect:{...n.effect,cost:{type:n.effect.cost.type,value:n.effect.cost.value-A({value:t,type:"energy"},n.effect.cost.type)}}})}),"next energy card cost money":()=>({index:u.Last,once:!0,condition:e=>e.effect.cost.type==="energy",use:e=>({...e,effect:{...e.effect,cost:{type:"money",value:Math.ceil(e.effect.cost.value*h)}}})}),"next money card cost energy":()=>({index:u.Last,once:!0,condition:e=>e.effect.cost.type==="money"&&e.effect.cost.value>0,use:(e,t)=>({...e,effect:{...e.effect,cost:{type:"energy",value:Math.min(t.energyMax,Math.ceil(e.effect.cost.value/h))}}})}),"next card half cost":()=>({index:u.MultiplyOrDivide,once:!0,condition:e=>e.effect.cost.value>1,use:e=>({...e,effect:{...e.effect,cost:{type:e.effect.cost.type,value:Math.floor(e.effect.cost.value/2)}}})}),"level up cards":(e,t)=>({index:u.First,condition:n=>e.includes(n.name),use:(n,r,o)=>{const f=n.rarity+t;return{...n,rarity:f,effect:o.effect(g(f,r),r,n)}}}),"all card inflation":()=>({index:u.First,condition:()=>!0,use:(e,t,n)=>{const r=e.rarity-t.inflation;return{...e,rarity:r,effect:n.effect(g(r,t),t,e)}}})},m={byType:e=>t=>e.startsWith("!")?e==="@action"?t.type==="action":t.type==="support":e==="!@action"?t.type!=="action":t.type!=="support",byTag:e=>t=>e.startsWith("!")?!t.effect().tags.includes(e.slice(2)):t.effect().tags.includes(e.slice(1)),byFamily:e=>t=>t.type==="action"&&(e.startsWith("!")?!t.families.includes(e.slice(2)):t.families.includes(e.slice(1)))};function _(e){return/^!?@(?:action|support)/.test(e)?m.byType(e):/^!?@/.test(e)?m.byTag(e):m.byFamily(e)}function L(e,t){const n=o=>{var f;return(e.draw.length===0||e.draw.every(i=>i.name!==o.name))&&(e.discard.length===0||e.discard.every(i=>i.name!==o.name))&&(e.hand.length===0||e.hand.every(i=>i.name!==o.name))&&(!(t!=null&&t.exclude)||((f=t.exclude)==null?void 0:f.every(i=>i!==o.name)))&&(!(t!=null&&t.filter)||t.filter.every(i=>_(i)(o)))&&(!o.effect().tags.includes("upgrade")||e.upgrades.length===0||e.upgrades.every(i=>{const c=O(i);return c.name!==o.name||c.cumul<c.max}))},r=C.filter(n);if(r.length<e.choiceOptionCount)for(;r.length<e.choiceOptionCount;)r.push(v(e));else if(!(t!=null&&t.noResource)){const o=r.length;for(let f=0;f<Math.ceil(o/10);f++)r.push(v(e))}return{header:t.header,options:I(r,3).slice(0,e.choiceOptionCount).map(o=>a(o)?o:{name:o.name,state:"landing",initialRarity:S()})}}function j(e,t){return e.setOperationInProgress("choices",!0),t}function k(e){return e.reputation===0?"reputation":e.draw.length===0&&e.hand.length===0?"mill":e.hand.every(t=>{const n=s(t,e);return n.effect.condition&&!n.effect.condition(e,n)?!0:!T(n,e)})&&(e.reputation+e.energy<b||e.hand.length>=B||e.draw.length===0)?e.draw.length===0?"mill-lock":"soft-lock":!1}function H(e,t){let n=s(t,e,{withoutModifiers:!0});const r=e.globalCardModifiers.map(f=>[f,w(f)]).toSorted(([,f],[,i])=>f.index-i.index),o=[];for(const[f,i]of r){if(i.condition&&!i.condition(n,e))continue;const c=n;n=i.use(n,e,p(n.name));const l=n.rarity!==c.rarity,d=n.effect.cost.value!==c.effect.cost.value,y=n.effect.cost.type!==c.effect.cost.type;l&&o.push({reason:f.reason,type:"localAdvantage",before:c.rarity,after:n.rarity}),(d||y)&&o.push({reason:f.reason,type:"cost",before:c.effect.cost,after:n.effect.cost})}return o}function U(e,t,n=!1){const r=e.globalCardModifiers.map(o=>[o,w(o)]).toSorted(([,o],[,f])=>o.index-f.index);for(const[o,f]of r)f.condition&&!f.condition(t,e)||(t=f.use(t,e,p(t.name)),n&&f.once&&e.dangerouslyUpdate({globalCardModifiers:e.globalCardModifiers.filter(i=>i!==o)}));return t}function P(e,t){if(t.effect.tags.includes("ephemeral"))return!0;if(t.effect.tags.includes("upgrade")){const n=M.find(r=>r.name===t.name);if(n.max){if(n.max===1)return!0;const r=e.upgrades.find(f=>f.name===t.name);if(!r)return!1;const o=O(r);return o.cumul>=o.max-1}}return!1}function D(e,t){return e.map(n=>a(n)?n:s(n,t)).toSorted((n,r)=>{if(a(n)&&a(r)){const o=["energy","money","reputation"],f=o.indexOf(n.type),i=o.indexOf(r.type),c=n.value,l=r.value;return f-i||c-l}if(!a(n)&&a(r))return-1;if(a(n)&&!a(r))return 1;if(x(n)&&x(r)){const o=n.type==="action"?1:0,f=r.type==="action"?1:0,i=n.effect.cost.value>0&&n.effect.cost.type==="money"?1:0,c=r.effect.cost.value>0&&r.effect.cost.type==="money"?1:0,l=n.effect.cost.value,d=r.effect.cost.value,y=n.effect.tags.join(",").localeCompare(r.effect.tags.join(","));return o-f||i-c||l-d||y}return 0})}function X(e,t=!1){const n=t?D(e.hand,e):e.hand.map(r=>s(r,e));return{revivedHand:n,revivedDraw:e.draw.map(r=>s(r,e)),revivedDiscard:e.discard.map(r=>s(r,e)),hand:t?n.map(r=>E(r)):e.hand}}function w(e){return F[e.name](...e.params)}function p(e){const t=C.find(n=>n.name===(typeof e=="string"?e:e.name));if(!t)throw new Error(`Card ${e} not found`);return t}function O(e){const t=M.find(n=>n.name===(typeof e=="string"?e:e.name));if(!t)throw new Error(`Upgrade ${e} not found`);return{...t,type:"upgrade",state:typeof e!="string"?e.state:"appear",cumul:typeof e!="string"?e.cumul:1,max:t.max??1/0}}function s(e,t,n){const r=p(e),o=typeof e!="string"?e.initialRarity:G.common,f={...r,type:r.type,state:typeof e!="string"?e.state:null,initialRarity:o,rarity:o},i={...f,effect:r.effect(g(o,t),t,f)};return n!=null&&n.withoutModifiers?i:U(t,i,n==null?void 0:n.clean)}export{U as applyGlobalCardModifiers,m as choiceOptionFilters,j as createChoiceOptions,H as getGlobalCardModifierLogs,k as isGameOver,p as resolveCard,_ as resolveChoiceOptionFilter,L as resolveChoiceOptions,s as reviveCard,w as reviveCardModifier,O as reviveUpgrade,X as revivedState,D as toSortedCards,P as willBeRemoved};
